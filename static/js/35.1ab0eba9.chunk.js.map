{"version":3,"file":"static/js/35.1ab0eba9.chunk.js","mappings":"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","sources":["services/API.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://goit-react-hw-05-movies/./src/views/Movies/MoviesView.module.css?35f9","views/Movies/MoviesView.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"10da0ab85bfd05885200cf46ca6575c7\";\n\nexport async function getTrendingMovies() {\n  return await axios.get(\n    `${BASE_URL}movie/popular?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n\nexport async function getMovieItem(movieId) {\n  return await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n\nexport async function getMovieCast(movieId) {\n  return await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport async function searchMovie(searchQuery) {\n  return await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"search_form\":\"MoviesView_search_form__amuG5\",\"search_btn\":\"MoviesView_search_btn__VLK+b\",\"search_input\":\"MoviesView_search_input__o5gbj\",\"movies_list\":\"MoviesView_movies_list__4FJ4O\",\"movie_item\":\"MoviesView_movie_item__Gz0lV\",\"movie_item_link\":\"MoviesView_movie_item_link__84JPT\"};","import { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { searchMovie } from \"../../services/API\";\nimport { Link, useNavigate, useLocation } from \"react-router-dom\";\nimport styles from \"./MoviesView.module.css\";\n\nexport default function MoviesView() {\n  const [serchQuery, setSearchQuery] = useState(\"\");\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  // console.log(location);\n  // console.log(navigate);\n\n  const handleChange = (e) => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (serchQuery.trim() === \"\") {\n      return toast.error(\"Search field can't be empty!\");\n    }\n\n    searchMovie(serchQuery).then((data) => {\n      const {\n        data: { results },\n      } = data;\n      if (results.length === 0) {\n        return toast.error(\n          \"Sorry, there are no movies. Try another request...\"\n        );\n      }\n      setMovies(results);\n    });\n\n    navigate({ ...location, search: `query=${serchQuery}` });\n\n    setSearchQuery(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.search_form}>\n        <input\n          className={styles.search_input}\n          onChange={handleChange}\n          value={serchQuery}\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"type to search movies...\"\n        />\n        <button type=\"submit\" className={styles.search_btn}>\n          Search\n        </button>\n      </form>\n\n      {movies && (\n        <ul className={styles.movies_list}>\n          {movies.map((movie) => {\n            return (\n              <li key={movie.id} className={styles.movie_item}>\n                <Link\n                  to={`${location.pathname}/${movie.id}`}\n                  className={styles.movie_item_link}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","getTrendingMovies","axios","getMovieItem","movieId","getMovieReviews","getMovieCast","searchMovie","searchQuery","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MoviesView","useState","serchQuery","setSearchQuery","movies","setMovies","navigate","useNavigate","location","useLocation","onSubmit","e","preventDefault","trim","toast","then","data","results","search","className","styles","onChange","toLowerCase","name","type","autoComplete","autoFocus","placeholder","map","movie","to","pathname","id","title"],"sourceRoot":""}