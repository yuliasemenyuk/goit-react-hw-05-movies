{"version":3,"file":"static/js/822.2be221a9.chunk.js","mappings":"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","sources":["services/API.js","webpack://goit-react-hw-05-movies/./src/views/Cast/CastView.module.css?078a","views/Cast/CastView.js","webpack://goit-react-hw-05-movies/./src/views/Reviews/ReviewsView.module.css?b3fe","views/Reviews/ReviewsView.js","webpack://goit-react-hw-05-movies/./src/views/MovieInfo/MovieInfoView.module.css?8325","views/MovieInfo/MovieInfoView.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst KEY = \"10da0ab85bfd05885200cf46ca6575c7\";\n\nexport async function getTrendingMovies() {\n  return await axios.get(\n    `${BASE_URL}movie/popular?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n\nexport async function getMovieItem(movieId) {\n  return await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport async function getMovieReviews(movieId) {\n  return await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n}\n\nexport async function getMovieCast(movieId) {\n  return await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport async function searchMovie(searchQuery) {\n  return await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"cast_list\":\"CastView_cast_list__JT2Ck\",\"cast_item\":\"CastView_cast_item__IFG6o\",\"cast_image\":\"CastView_cast_image__06xD2\",\"cast_character\":\"CastView_cast_character__fdyQm\",\"cast_actor\":\"CastView_cast_actor__rM3Xm\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"../../services/API\";\nimport styles from \"./CastView.module.css\";\n\nexport default function CastView() {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then((res) => {\n      setCast(res.data.cast);\n    });\n  }, []);\n\n  // console.log(getMovieCast(movieId));\n  // console.log(cast);\n\n  return (\n    <>\n      {cast && (\n        <ul className={styles.cast_list}>\n          {cast.map((character) => {\n            return (\n              <li key={character.id} className={styles.cast_item}>\n                {character.profile_path ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w92${character.profile_path}`}\n                    alt={character.name}\n                    className={styles.cast_image}\n                  />\n                ) : (\n                  <img\n                    src=\"https://sd.keepcalms.com/i/sorry-no-picture-available-2.png\"\n                    alt={character.name}\n                    width=\"92px\"\n                    height=\"138px\"\n                  />\n                )}\n                <p className={styles.cast_character}>{character.character}</p>\n                <p className={styles.cast_actor}>{character.name}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"review_item\":\"ReviewsView_review_item__hr6vr\",\"review_list\":\"ReviewsView_review_list__IVdex\"};","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieReviews } from \"../../services/API\";\nimport styles from \"./ReviewsView.module.css\";\n\nexport default function ReviewsView() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId).then((res) => {\n      setReviews(res.data.results);\n    });\n  }, []);\n\n  // console.log(getMovieReviews(movieId));\n  // console.log(reviews);\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <p>There are no reviews for this film</p>\n      ) : (\n        <ul className={styles.review_list}>\n          {reviews.map((review) => {\n            return (\n              <li key={review.id} className={styles.review_item}>\n                <h3>{review.author}</h3>\n                <span>{review.created_at.slice(0, 10)}</span>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"base_info_title\":\"MovieInfoView_base_info_title__3JmKc\",\"details_title\":\"MovieInfoView_details_title__HATxF\",\"deteils_links\":\"MovieInfoView_deteils_links__Ka8um\",\"back_btn\":\"MovieInfoView_back_btn__Uye1C\"};","import { useState, useEffect, useRef } from \"react\";\nimport {\n  Routes,\n  Route,\n  useParams,\n  NavLink,\n  useNavigate,\n  useLocation,\n  Link\n} from \"react-router-dom\";\nimport { getMovieItem } from \"../../services/API\";\nimport CastView from \"../Cast/CastView\";\nimport ReviewsView from \"../Reviews/ReviewsView\";\nimport styles from \"./MovieInfoView.module.css\";\n\nexport default function MovieInfoView() {\n  const { movieId } = useParams();\n\n  // const navigate = useNavigate();\n  const location = useLocation();\n  const backPage = useRef(location);\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieItem(movieId).then((data) => {\n      const {\n        data: {\n          id,\n          poster_path,\n          release_date,\n          title,\n          name,\n          overview,\n          vote_average,\n          genres,\n        },\n      } = data;\n\n      setMovie({\n        id,\n        poster_path,\n        release_date,\n        title,\n        name,\n        overview,\n        vote_average,\n        genresValues:\n          genres.length === 0\n            ? \"There are no genres\"\n            : genres.map(({ name }) => [name]).join(\", \"),\n      });\n    });\n    localStorage.setItem(\"movie\", JSON.stringify(movie));\n  }, [movieId]);\n  // conle.log(movie);\n  // console.log(movieId);\n\n  return (\n    <>\n      <Link to={location?.state?.from ?? `/`}\n        // state={{ from: backPage.current }}>\n     > &#8592; Go back\n      </Link>\n\n      {movie && (\n        <>\n          <h1>\n            {movie.title} ({movie.release_date.slice(0, 4)})\n          </h1>\n          {movie.poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`}\n              alt={movie.title}\n            ></img>\n          ) : (\n            <img\n              src=\"https://sd.keepcalms.com/i/sorry-no-picture-available-2.png\"\n              alt={movie.title}\n              width=\"300px\"\n              height=\"450px\"\n            />\n          )}\n          <p>User score: {movie.vote_average}</p>\n          <h2 className={styles.base_info_title}>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2 className={styles.base_info_title}>Genres</h2>\n          <p>{movie.genresValues}</p>\n          <h3 className={styles.details_title}>Additional information</h3>\n          <NavLink\n            to={`/movies/${movie.id}/cast`}\n            className={styles.deteils_links}\n          >\n            Cast\n          </NavLink>\n          <NavLink\n            to={`/movies/${movie.id}/reviews`}\n            className={styles.deteils_links}\n          >\n            Reviews\n          </NavLink>\n        </>\n      )}\n      <Routes>\n        <Route path=\"cast\" element={<CastView />} />\n        <Route path=\"reviews\" element={<ReviewsView />} />\n      </Routes>\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","getTrendingMovies","axios","getMovieItem","movieId","getMovieReviews","getMovieCast","searchMovie","searchQuery","CastView","useState","cast","setCast","useParams","useEffect","then","res","data","className","styles","map","character","profile_path","src","alt","name","width","height","id","ReviewsView","reviews","setReviews","results","length","review","author","created_at","slice","content","MovieInfoView","location","useLocation","useRef","movie","setMovie","poster_path","release_date","title","overview","vote_average","genres","genresValues","join","localStorage","setItem","JSON","stringify","to","state","from","path","element"],"sourceRoot":""}